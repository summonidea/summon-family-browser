{
  "Uuid": "caa6c078-91a4-407d-a9e4-c1210af84cd1",
  "IsCustomNode": false,
  "Description": null,
  "Name": "ExtractFamilyDataFromDirectory",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "ba6483d1f1054d5192602460d3851cab",
      "Name": "INPUT RFA FAMILIES",
      "Type": "string",
      "Value": "D:\\Xavier\\SUMMONIDEA\\BLOGGING\\summon-family-browser\\src\\input_families",
      "Description": "Allows you to select a directory on the system to get its path"
    },
    {
      "Id": "e1dbbeb54eeb4d1687ff5437dfe4e0f6",
      "Name": "OUTPUT FBX FAMILIES",
      "Type": "string",
      "Value": "D:\\Xavier\\SUMMONIDEA\\BLOGGING\\summon-family-browser\\src\\output_families",
      "Description": "Allows you to select a directory on the system to get its path"
    },
    {
      "Id": "ec0fe5d011a84105ab9dd0cdac3a22ba",
      "Name": "OUTPUT JSON",
      "Type": "string",
      "Value": "D:\\Xavier\\SUMMONIDEA\\BLOGGING\\summon-family-browser\\src",
      "Description": "Allows you to select a directory on the system to get its path"
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "1a67457042024fffa47144848a6355e2",
      "Inputs": [
        {
          "Id": "39b0896017244255a7322d7fc8c209f8",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ca892c52b3c466d93725b41d454deb7",
          "Name": "amt",
          "Description": "Layers of nesting to remove.\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3433496ab58f42c0a10194ee35fb2ccd",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amt: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "f[2];",
      "Id": "792d9ed298b34b27bda4aa15f5459b7d",
      "Inputs": [
        {
          "Id": "39787f4280e246b180f76ce09c0e6152",
          "Name": "f",
          "Description": "f",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c881a7638a7f4d3f89dd81aa452ba938",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\n# Import RevitAPI\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\nfrom Autodesk.Revit.Attributes import*\n\nclr.AddReference(\"RevitAPIUI\")\nfrom  Autodesk.Revit.UI import *\n\n# Import DocumentManager and TransactionManager\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\nfrom System.Collections.Generic import *\n\n# Import Revit Nodes\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\nclr.ImportExtensions(Revit.GeometryConversion)\n\n# Import python library\nimport sys\npyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\nsys.path.append(pyt_path)\nimport os\nimport json\n\ntOptions = TransactWithCentralOptions()\n\ndoc = DocumentManager.Instance.CurrentDBDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n#uidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\n\nif isinstance(IN[0], list):\n\tfile = IN[0]\n\tfilename = IN[2]\nelse:\n\tfile = [IN[0]]\n\tfilename = [IN[2]]\n\nexportPath = IN[1]\njsonexportPath = IN[3]\n\nnewdocpath = []\ntypes, params, paramValues = [], [], []\n\nopenConfig = WorksetConfiguration(WorksetConfigurationOption.OpenAllWorksets)\noOptions = OpenOptions()\noOptions.DetachFromCentralOption = DetachFromCentralOption.DetachAndDiscardWorksets\noOptions.Audit = False\noOptions.SetOpenWorksetsConfiguration(openConfig)\n\nworksharingOptions = WorksharingSaveAsOptions()\nworksharingOptions.SaveAsCentral = False\n\nSaveOptions = SaveAsOptions()\nSaveOptions.MaximumBackups = 1\nSaveOptions.OverwriteExistingFile = True\n\nfamLib = {}\nfamLib['families'] = []\n\n#TransactionManager.Instance.ForceCloseTransaction()\n\ntry:\n\tfor files,filenames in zip(file,filename):\n\t\tmodelpath = FilePath(files)\n\t\tnewdoc = app.OpenDocumentFile(modelpath, oOptions)\n\t\n\t\tcollector = Autodesk.Revit.DB.FilteredElementCollector(newdoc)\n\t\tdocViews = collector.OfClass(Autodesk.Revit.DB.View3D).ToElements()\n\t\t\n\t\tviewIds = []\n\t\tfor v in docViews:\n\t\t\tif v.CanBePrinted == True:\n\t\t\t\tviewIds.append(v.Id)\n\t\t\n\t\t##EXPORT FBX\n\t\tviewSetExport = ViewSet()\n\t\tviewSetExport.Insert(docViews[0])\n\t\texportFBX = newdoc.Export(exportPath, newdoc.Title, viewSetExport, FBXExportOptions())\n\t\t\n\t\t##EXPORT DWG\n\t\t#viewListExport = List[Autodesk.Revit.DB.ElementId]()\n\t\t#viewListExport.Add(docViews[0].Id)\n\t\t#exportDWG = newdoc.Export(exportPath, newdoc.Title, viewListExport, DWGExportOptions())\n\t\t\n\t\t##EXPORT VIEWS AS IMAGES\n\n\t\t# image export options constructor\n\t\tieo = ImageExportOptions()\n\t\t# export range (exporting amount of view(s))\n\t\tieo.ExportRange = ExportRange.SetOfViews\n\t\tieo.SetViewsAndSheets(viewIds)\n\t\t# filepath\n\t\tieo.FilePath = exportPath + '\\\\' + newdoc.Title\n\t\t# File type for exported HLR and wireframe views\n\t\tieo.HLRandWFViewsFileType = ImageFileType.PNG\n\t\t# image resolution\n\t\tieo.ImageResolution = ImageResolution.DPI_300\n\t\t# fit direction\n\t\tieo.FitDirection = FitDirectionType.Horizontal\n\t\t# pixelsize\n\t\tieo.PixelSize = 600\n\t\t# file type for exported shadow views\n\t\tieo.ShadowViewsFileType = ImageFileType.PNG\n\t\t# zoom type\n\t\tieo.ZoomType = ZoomFitType.FitToPage\n\t\t# export image\n\t\tnewdoc.ExportImage(ieo)\n\t\t\n\t\tfamManager = newdoc.FamilyManager\n\t\t\n\t\tfamParams = newdoc.FamilyManager.GetParameters()\n\t\tparams.append([p.Definition.Name for p in famParams])\n\t\t\n\t\tfamTypes = newdoc.FamilyManager.Types\n\t\ttypes.append(famTypes)\n\t\t\n\t\tfamTypeParamValues = []\n\t\t\n\t\tfamLib['families'].append({\n\t\t\t'family_path': files,\n\t\t\t'family_name': newdoc.Title,\n\t\t\t'types': [],\n\t\t\t\n\t\t})\t\t\n\n\t\tfor famType in famTypes:\n\t\t\ttp = []\n\t\t\tfamLib['families'][-1]['types'].append({\n\t\t\t\t'type_name': famType.Name,\n\t\t\t\t'parameters': [],\n\t\t\t})\n\t\t\t#fam = famLib['families'][-1]\n\t\t\t#fam['types'].append(famType.Name)\n\t\t\t\n\t\t\tfor famParam in famParams:\n\t\t\t\tif famParam.StorageType == StorageType.Double:\n\t\t\t\t\ttp.append(famType.AsDouble(famParam))\n\t\t\t\t\t#famLib['families'][-1]['types'][-1]['parameters'][-1][famParam.Definition.Name] = famType.AsDouble(famParam)\n\t\t\t\t\tfamLib['families'][-1]['types'][-1]['parameters'].append({\n\t\t\t\t\t\t'parameter_name': famParam.Definition.Name,\n\t\t\t\t\t\t'parameter_group': LabelUtils.GetLabelFor(famParam.Definition.ParameterGroup),\n\t\t\t\t\t\t'parameter_type': LabelUtils.GetLabelFor(famParam.Definition.ParameterType),\n\t\t\t\t\t\t'parameter_formula': famParam.Formula,\n\t\t\t\t\t\t'is_instance': famParam.IsInstance,\n\t\t\t\t\t\t'is_shared': famParam.IsShared,\n\t\t\t\t\t\t'is_reporting': famParam.IsReporting,\n\t\t\t\t\t\t'display_units': LabelUtils.GetLabelFor(famParam.DisplayUnitType),\n\t\t\t\t\t\t\n\t\t\t\t\t\t'value': famType.AsDouble(famParam)\n\t\t\t\t\t})\n\t\t\t\t\tcontinue\n\t\t\t\telif famParam.StorageType == StorageType.ElementId:\n\t\t\t\t\ttp.append(famType.AsElementId(famParam))\n\t\t\t\t\tfamLib['families'][-1]['types'][-1]['parameters'].append({\n\t\t\t\t\t\t'parameter_name': famParam.Definition.Name,\n\t\t\t\t\t\t'parameter_group': LabelUtils.GetLabelFor(famParam.Definition.ParameterGroup),\n\t\t\t\t\t\t'parameter_type': LabelUtils.GetLabelFor(famParam.Definition.ParameterType),\n\t\t\t\t\t\t'parameter_formula': famParam.Formula,\n\t\t\t\t\t\t'is_instance': famParam.IsInstance,\n\t\t\t\t\t\t'is_shared': famParam.IsShared,\n\t\t\t\t\t\t'is_reporting': famParam.IsReporting,\n\t\t\t\t\t\t#'display_units': famParam.DisplayUnitType.ToString(),\n\t\t\t\t\t\t\n\t\t\t\t\t\t'value': famType.AsElementId(famParam).ToString()\n\t\t\t\t\t})\n\t\t\t\t\tcontinue\n\t\t\t\telif famParam.StorageType == StorageType.Integer:\n\t\t\t\t\ttp.append(famType.AsInteger(famParam))\n\t\t\t\t\tfamLib['families'][-1]['types'][-1]['parameters'].append({\n\t\t\t\t\t\t'parameter_name': famParam.Definition.Name,\n\t\t\t\t\t\t'parameter_group': LabelUtils.GetLabelFor(famParam.Definition.ParameterGroup),\n\t\t\t\t\t\t'parameter_type': LabelUtils.GetLabelFor(famParam.Definition.ParameterType),\n\t\t\t\t\t\t'parameter_formula': famParam.Formula,\n\t\t\t\t\t\t'is_instance': famParam.IsInstance,\n\t\t\t\t\t\t'is_shared': famParam.IsShared,\n\t\t\t\t\t\t'is_reporting': famParam.IsReporting,\n\t\t\t\t\t\t#'display_units': famParam.DisplayUnitType.ToString(),\n\t\t\t\t\t\t\n\t\t\t\t\t\t'value': famType.AsInteger(famParam)\n\t\t\t\t\t})\n\t\t\t\t\tcontinue\n\t\t\t\telif famParam.StorageType == StorageType.String:\n\t\t\t\t\ttp.append(famType.AsString(famParam))\n\t\t\t\t\tfamLib['families'][-1]['types'][-1]['parameters'].append({\n\t\t\t\t\t\t'parameter_name': famParam.Definition.Name,\n\t\t\t\t\t\t'parameter_group': LabelUtils.GetLabelFor(famParam.Definition.ParameterGroup),\n\t\t\t\t\t\t'parameter_type': LabelUtils.GetLabelFor(famParam.Definition.ParameterType),\n\t\t\t\t\t\t'parameter_formula': famParam.Formula,\n\t\t\t\t\t\t'is_instance': famParam.IsInstance,\n\t\t\t\t\t\t'is_shared': famParam.IsShared,\n\t\t\t\t\t\t'is_reporting': famParam.IsReporting,\n\t\t\t\t\t\t#'display_units': famParam.DisplayUnitType.ToString(),\n\t\t\t\t\t\t\n\t\t\t\t\t\t'value': famType.AsString(famParam)\n\t\t\t\t\t})\n\t\t\t\t\tcontinue\n\t\t\tfamTypeParamValues.append(tp)\n\t\t\n\t\tparamValues.append(famTypeParamValues)\t\t\n\t\t\n\t\tnewFamPath = exportPath + \"\\\\\" + str(filenames)\n\t\tnewdocpath.append(newFamPath)\n\t\t\n\t\t#newdoc.SaveAs(exportPath,SaveOptions)\t\n\t\tnewdoc.Close(False)\n\t#with open('D:\\data.json', 'w') as outfile:\n\twith open(jsonexportPath + '\\\\family_data.json', 'w') as outfile:\n\t\tjson.dump(famLib, outfile)\n\t\t\n\tOUT = [newdocpath, types, params, paramValues]\nexcept Exception, e:\n\tOUT = str(e)",
      "VariableInputPorts": true,
      "Id": "3ae3345a903249be97f680f137975494",
      "Inputs": [
        {
          "Id": "9a9e112d9a944f37940a56c08de61345",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2f6f9a1280dd4ad4870c27eef3a7cd39",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "17f4759a090b4a42b4430a22ba730a99",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25268136c89e446a8ee0e1f216709623",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8509c33574fe47f08a00901e9522553b",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "55277829ab4e43bb9c1d6a751edf8838",
      "Inputs": [
        {
          "Id": "be319c5458f04beebf14124428100991",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3ccd1aa916f4331bd655815505ad0da",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "10af82f4d6c340d987358b3175dda7ba",
      "Inputs": [
        {
          "Id": "d9fa4be15a0d41dbb9c340211424a2e8",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "924c3a633c6642128723deaf7299a779",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the output of node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.FileName@string,bool",
      "Id": "db7d270991b947e792bd55821affe611",
      "Inputs": [
        {
          "Id": "8e52012941d14ff982047d0313a2aa45",
          "Name": "path",
          "Description": "Path to get the file name of.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac789bdf71f94ee3acf84f5bafa08674",
          "Name": "withExtension",
          "Description": "Determines whether or not the extension is included in the result, defaults to true.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "701f2de4a45344f1930e945712a804ae",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the file name of a file path.\n\nFileSystem.FileName (path: string, withExtension: bool = true): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.IO.FileSystem.GetDirectoryContents@var,string,bool",
      "Id": "e88591078fae476bb9e197faf6a54bcd",
      "Inputs": [
        {
          "Id": "4fd0ed9ddbba4c1d86d7f49c2867d4f2",
          "Name": "directory",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a38e75dd82014710843769ad5ccff1bc",
          "Name": "searchString",
          "Description": "string\nDefault value : \"*.*\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5741d4a261a241b6af91116cf836a249",
          "Name": "includeSubdirectories",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d44e7623d4e488bbfb72f2e715d0031",
          "Name": "files",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "efd45b0fee194dc8848126ffffe7bad7",
          "Name": "directories",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "FileSystem.GetDirectoryContents (directory: var, searchString: string = \"*.*\", includeSubdirectories: bool = false): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "f[2];",
      "Id": "9acd4a55e10f46d3b8b8c52f4fb32979",
      "Inputs": [
        {
          "Id": "13bfaf70cbdf459fae90deaa2d4189eb",
          "Name": "f",
          "Description": "f",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "534d851cbb3242ae99b9978a335e660e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DirectoryObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "4b4fb88ad2ed492db2f891ad7e22ce32",
      "Inputs": [
        {
          "Id": "e7dfed6bfcce44a7a4ef2e6426ec6667",
          "Name": "path",
          "Description": "Path to the directory.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d92df874cc174e7cbde341da2f48db37",
          "Name": "directory",
          "Description": "Directory object.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a directory object from a path"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "0b44a7707318460d9ec9ebf7c1316187",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "54af12f9eca7493ba20f4bb2d2be8353",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"*.rfa\";",
      "Id": "a9b0dac871754a60bda9a3a257946d0d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fa90b4e0d1944a6a827f461f73db988c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Directory, CoreNodeModels",
      "HintPath": "D:\\Xavier\\SUMMONIDEA\\BLOGGING\\summon-family-browser\\src\\input_families",
      "InputValue": "D:\\Xavier\\SUMMONIDEA\\BLOGGING\\summon-family-browser\\src\\input_families",
      "NodeType": "ExtensionNode",
      "Id": "ba6483d1f1054d5192602460d3851cab",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cbf76b05e73c416cb3327b62eb2f07bd",
          "Name": "",
          "Description": "Directory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a directory on the system to get its path"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Directory, CoreNodeModels",
      "HintPath": "D:\\Xavier\\SUMMONIDEA\\BLOGGING\\summon-family-browser\\src\\output_families",
      "InputValue": "D:\\Xavier\\SUMMONIDEA\\BLOGGING\\summon-family-browser\\src\\output_families",
      "NodeType": "ExtensionNode",
      "Id": "e1dbbeb54eeb4d1687ff5437dfe4e0f6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a73a7aeb53bb43cd80765a05162a2ec1",
          "Name": "",
          "Description": "Directory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a directory on the system to get its path"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Directory, CoreNodeModels",
      "HintPath": "D:\\Xavier\\SUMMONIDEA\\BLOGGING\\summon-family-browser\\src",
      "InputValue": "D:\\Xavier\\SUMMONIDEA\\BLOGGING\\summon-family-browser\\src",
      "NodeType": "ExtensionNode",
      "Id": "ec0fe5d011a84105ab9dd0cdac3a22ba",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "debdf147fde145689ec9701090c3823b",
          "Name": "",
          "Description": "Directory",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a directory on the system to get its path"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n\n# Import RevitAPI\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\nfrom Autodesk.Revit.Attributes import*\n\nclr.AddReference(\"RevitAPIUI\")\nfrom  Autodesk.Revit.UI import *\n\n# Import DocumentManager and TransactionManager\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\n\nfrom System.Collections.Generic import *\n\n# Import Revit Nodes\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\nclr.ImportExtensions(Revit.GeometryConversion)\n\n# Import python library\nimport sys\npyt_path = r'C:\\Program Files (x86)\\IronPython 2.7\\Lib'\nsys.path.append(pyt_path)\nimport os\nimport json\n\ntOptions = TransactWithCentralOptions()\n\ndoc = DocumentManager.Instance.CurrentDBDocument\nuiapp = DocumentManager.Instance.CurrentUIApplication\napp = uiapp.Application\n#uidoc = DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\n\nif isinstance(IN[0], list):\n\tfile = IN[0]\n\tfilename = IN[2]\nelse:\n\tfile = [IN[0]]\n\tfilename = [IN[2]]\n\nexportPath = IN[1]\njsonexportPath = IN[3]\n\nnewdocpath = []\ntypes, params, paramValues = [], [], []\n\nopenConfig = WorksetConfiguration(WorksetConfigurationOption.OpenAllWorksets)\noOptions = OpenOptions()\noOptions.DetachFromCentralOption = DetachFromCentralOption.DetachAndDiscardWorksets\noOptions.Audit = False\noOptions.SetOpenWorksetsConfiguration(openConfig)\n\nworksharingOptions = WorksharingSaveAsOptions()\nworksharingOptions.SaveAsCentral = False\n\nSaveOptions = SaveAsOptions()\nSaveOptions.MaximumBackups = 1\nSaveOptions.OverwriteExistingFile = True\n\nfamLib = {}\nfamLib['families'] = []\n\n#TransactionManager.Instance.ForceCloseTransaction()\n\ntry:\n\tfor files,filenames in zip(file,filename):\n\t\tmodelpath = FilePath(files)\n\t\tnewdoc = app.OpenDocumentFile(modelpath, oOptions)\n\t\n\t\tcollector = Autodesk.Revit.DB.FilteredElementCollector(newdoc)\n\t\tdocViews = collector.OfClass(Autodesk.Revit.DB.View3D).ToElements()\n\t\t\n\t\tviewIds = []\n\t\tfor v in docViews:\n\t\t\tif v.CanBePrinted == True:\n\t\t\t\tviewIds.append(v.Id)\n\t\t\n\t\t##EXPORT FBX\n\t\tviewSetExport = ViewSet()\n\t\tviewSetExport.Insert(docViews[0])\n\t\texportFBX = newdoc.Export(exportPath, newdoc.Title, viewSetExport, FBXExportOptions())\n\t\t\n\t\t##EXPORT DWG\n\t\t#viewListExport = List[Autodesk.Revit.DB.ElementId]()\n\t\t#viewListExport.Add(docViews[0].Id)\n\t\t#exportDWG = newdoc.Export(exportPath, newdoc.Title, viewListExport, DWGExportOptions())\n\t\t\n\t\t##EXPORT VIEWS AS IMAGES\n\n\t\t# image export options constructor\n\t\tieo = ImageExportOptions()\n\t\t# export range (exporting amount of view(s))\n\t\tieo.ExportRange = ExportRange.SetOfViews\n\t\tieo.SetViewsAndSheets(viewIds)\n\t\t# filepath\n\t\tieo.FilePath = exportPath + '\\\\' + newdoc.Title\n\t\t# File type for exported HLR and wireframe views\n\t\tieo.HLRandWFViewsFileType = ImageFileType.PNG\n\t\t# image resolution\n\t\tieo.ImageResolution = ImageResolution.DPI_300\n\t\t# fit direction\n\t\tieo.FitDirection = FitDirectionType.Horizontal\n\t\t# pixelsize\n\t\tieo.PixelSize = 600\n\t\t# file type for exported shadow views\n\t\tieo.ShadowViewsFileType = ImageFileType.PNG\n\t\t# zoom type\n\t\tieo.ZoomType = ZoomFitType.FitToPage\n\t\t# export image\n\t\tnewdoc.ExportImage(ieo)\n\t\t\n\t\tfamManager = newdoc.FamilyManager\n\t\t\n\t\t##ADD NEW PARAMETER\n\t\tnewParameterName = \"BIMMeet\"\n\t\tnewParameterType = ParameterType.Text\n\t\tnewParameterGroup = BuiltInParameter.PG_DATA\n\t\tnewParameterIsInstance = True\n\t\tnewdoc.FamilyManager.AddParameter(newParameterName, newParameterGroup, newParameterIsInstance)\n\t\t\n\t\tfamParams = newdoc.FamilyManager.GetParameters()\n\t\tparams.append([p.Definition.Name for p in famParams])\n\t\t\n\t\tfamTypes = newdoc.FamilyManager.Types\n\t\ttypes.append(famTypes)\n\t\t\n\t\tfamTypeParamValues = []\n\t\t\n\t\tfamLib['families'].append({\n\t\t\t'family_path': files,\n\t\t\t'family_name': newdoc.Title,\n\t\t\t'types': [],\n\t\t\t\n\t\t})\t\t\n\n\t\tfor famType in famTypes:\n\t\t\ttp = []\n\t\t\tfamLib['families'][-1]['types'].append({\n\t\t\t\t'type_name': famType.Name,\n\t\t\t\t'parameters': [],\n\t\t\t})\n\t\t\t#fam = famLib['families'][-1]\n\t\t\t#fam['types'].append(famType.Name)\n\t\t\t\n\t\t\tfor famParam in famParams:\n\t\t\t\tif famParam.StorageType == StorageType.Double:\n\t\t\t\t\ttp.append(famType.AsDouble(famParam))\n\t\t\t\t\t#famLib['families'][-1]['types'][-1]['parameters'][-1][famParam.Definition.Name] = famType.AsDouble(famParam)\n\t\t\t\t\tfamLib['families'][-1]['types'][-1]['parameters'].append({\n\t\t\t\t\t\t'parameter_name': famParam.Definition.Name,\n\t\t\t\t\t\t'parameter_group': LabelUtils.GetLabelFor(famParam.Definition.ParameterGroup),\n\t\t\t\t\t\t'parameter_type': LabelUtils.GetLabelFor(famParam.Definition.ParameterType),\n\t\t\t\t\t\t'parameter_formula': famParam.Formula,\n\t\t\t\t\t\t'is_instance': famParam.IsInstance,\n\t\t\t\t\t\t'is_shared': famParam.IsShared,\n\t\t\t\t\t\t'is_reporting': famParam.IsReporting,\n\t\t\t\t\t\t'display_units': LabelUtils.GetLabelFor(famParam.DisplayUnitType),\n\t\t\t\t\t\t\n\t\t\t\t\t\t'value': famType.AsDouble(famParam)\n\t\t\t\t\t})\n\t\t\t\t\tcontinue\n\t\t\t\telif famParam.StorageType == StorageType.ElementId:\n\t\t\t\t\ttp.append(famType.AsElementId(famParam))\n\t\t\t\t\tfamLib['families'][-1]['types'][-1]['parameters'].append({\n\t\t\t\t\t\t'parameter_name': famParam.Definition.Name,\n\t\t\t\t\t\t'parameter_group': LabelUtils.GetLabelFor(famParam.Definition.ParameterGroup),\n\t\t\t\t\t\t'parameter_type': LabelUtils.GetLabelFor(famParam.Definition.ParameterType),\n\t\t\t\t\t\t'parameter_formula': famParam.Formula,\n\t\t\t\t\t\t'is_instance': famParam.IsInstance,\n\t\t\t\t\t\t'is_shared': famParam.IsShared,\n\t\t\t\t\t\t'is_reporting': famParam.IsReporting,\n\t\t\t\t\t\t#'display_units': famParam.DisplayUnitType.ToString(),\n\t\t\t\t\t\t\n\t\t\t\t\t\t'value': famType.AsElementId(famParam).ToString()\n\t\t\t\t\t})\n\t\t\t\t\tcontinue\n\t\t\t\telif famParam.StorageType == StorageType.Integer:\n\t\t\t\t\ttp.append(famType.AsInteger(famParam))\n\t\t\t\t\tfamLib['families'][-1]['types'][-1]['parameters'].append({\n\t\t\t\t\t\t'parameter_name': famParam.Definition.Name,\n\t\t\t\t\t\t'parameter_group': LabelUtils.GetLabelFor(famParam.Definition.ParameterGroup),\n\t\t\t\t\t\t'parameter_type': LabelUtils.GetLabelFor(famParam.Definition.ParameterType),\n\t\t\t\t\t\t'parameter_formula': famParam.Formula,\n\t\t\t\t\t\t'is_instance': famParam.IsInstance,\n\t\t\t\t\t\t'is_shared': famParam.IsShared,\n\t\t\t\t\t\t'is_reporting': famParam.IsReporting,\n\t\t\t\t\t\t#'display_units': famParam.DisplayUnitType.ToString(),\n\t\t\t\t\t\t\n\t\t\t\t\t\t'value': famType.AsInteger(famParam)\n\t\t\t\t\t})\n\t\t\t\t\tcontinue\n\t\t\t\telif famParam.StorageType == StorageType.String:\n\t\t\t\t\ttp.append(famType.AsString(famParam))\n\t\t\t\t\tfamLib['families'][-1]['types'][-1]['parameters'].append({\n\t\t\t\t\t\t'parameter_name': famParam.Definition.Name,\n\t\t\t\t\t\t'parameter_group': LabelUtils.GetLabelFor(famParam.Definition.ParameterGroup),\n\t\t\t\t\t\t'parameter_type': LabelUtils.GetLabelFor(famParam.Definition.ParameterType),\n\t\t\t\t\t\t'parameter_formula': famParam.Formula,\n\t\t\t\t\t\t'is_instance': famParam.IsInstance,\n\t\t\t\t\t\t'is_shared': famParam.IsShared,\n\t\t\t\t\t\t'is_reporting': famParam.IsReporting,\n\t\t\t\t\t\t#'display_units': famParam.DisplayUnitType.ToString(),\n\t\t\t\t\t\t\n\t\t\t\t\t\t'value': famType.AsString(famParam)\n\t\t\t\t\t})\n\t\t\t\t\tcontinue\n\t\t\tfamTypeParamValues.append(tp)\n\t\t\n\t\tparamValues.append(famTypeParamValues)\t\t\n\t\t\n\t\tnewFamPath = exportPath + \"\\\\\" + str(filenames)\n\t\tnewdocpath.append(newFamPath)\n\t\t\n\t\t##SAVE AS FAMILY IN NEW DIRECOTRY\n\t\tnewdoc.SaveAs(exportPath,SaveOptions)\t\n\t\tnewdoc.Close(False)\n\t#with open('D:\\data.json', 'w') as outfile:\n\twith open(jsonexportPath + '\\\\family_data.json', 'w') as outfile:\n\t\tjson.dump(famLib, outfile)\n\t\t\n\tOUT = [newdocpath, types, params, paramValues]\nexcept Exception, e:\n\tOUT = str(e)",
      "VariableInputPorts": true,
      "Id": "7bbf36e89c3742fe8fbe0c1d4af0fc0b",
      "Inputs": [
        {
          "Id": "288b7781a83046708468f7a1ffa4f212",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "648be1e59ad149fc80ae0cca5d3dbfd3",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c89a620b4f94725a72ea04af5a25b0a",
          "Name": "IN[2]",
          "Description": "Input #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f3691491020647daae2f76d0eaa11fec",
          "Name": "IN[3]",
          "Description": "Input #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "de04f29e274b495f9133639a7c9384e7",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    }
  ],
  "Connectors": [
    {
      "Start": "3433496ab58f42c0a10194ee35fb2ccd",
      "End": "9a9e112d9a944f37940a56c08de61345",
      "Id": "b44e72936f3044a09797a3d0627ad2d0"
    },
    {
      "Start": "3433496ab58f42c0a10194ee35fb2ccd",
      "End": "39787f4280e246b180f76ce09c0e6152",
      "Id": "753f524ffb324791ade990eb2287624e"
    },
    {
      "Start": "3433496ab58f42c0a10194ee35fb2ccd",
      "End": "288b7781a83046708468f7a1ffa4f212",
      "Id": "f9dcec946d774adab8dd2dc7c42005f8"
    },
    {
      "Start": "8509c33574fe47f08a00901e9522553b",
      "End": "d9fa4be15a0d41dbb9c340211424a2e8",
      "Id": "1d9022b83bad4359b679315bb1a4f4b8"
    },
    {
      "Start": "d3ccd1aa916f4331bd655815505ad0da",
      "End": "39b0896017244255a7322d7fc8c209f8",
      "Id": "a6031ea1c42842b29764e9cd7d858f75"
    },
    {
      "Start": "701f2de4a45344f1930e945712a804ae",
      "End": "17f4759a090b4a42b4430a22ba730a99",
      "Id": "e0aec2c63f244bca8a7e8eb9dc8c1f49"
    },
    {
      "Start": "701f2de4a45344f1930e945712a804ae",
      "End": "13bfaf70cbdf459fae90deaa2d4189eb",
      "Id": "54d1bf7382a246f99bfda588d1dd7487"
    },
    {
      "Start": "701f2de4a45344f1930e945712a804ae",
      "End": "7c89a620b4f94725a72ea04af5a25b0a",
      "Id": "b7b42738613b4781bb67a4ffc08c9498"
    },
    {
      "Start": "2d44e7623d4e488bbfb72f2e715d0031",
      "End": "be319c5458f04beebf14124428100991",
      "Id": "bdc09428df7b49a7846af9838caf5f44"
    },
    {
      "Start": "2d44e7623d4e488bbfb72f2e715d0031",
      "End": "8e52012941d14ff982047d0313a2aa45",
      "Id": "337ff7f8fa4e482199a14fec57d95efe"
    },
    {
      "Start": "d92df874cc174e7cbde341da2f48db37",
      "End": "4fd0ed9ddbba4c1d86d7f49c2867d4f2",
      "Id": "56022c556c234196a773a7cf1d1b00cf"
    },
    {
      "Start": "54af12f9eca7493ba20f4bb2d2be8353",
      "End": "5741d4a261a241b6af91116cf836a249",
      "Id": "dda7219157094bcf8fce9050f8899c37"
    },
    {
      "Start": "fa90b4e0d1944a6a827f461f73db988c",
      "End": "a38e75dd82014710843769ad5ccff1bc",
      "Id": "a4c038d1577d42788adeb35cd193b3ae"
    },
    {
      "Start": "cbf76b05e73c416cb3327b62eb2f07bd",
      "End": "e7dfed6bfcce44a7a4ef2e6426ec6667",
      "Id": "c34a9751c208469ebfaad88a18f6798a"
    },
    {
      "Start": "a73a7aeb53bb43cd80765a05162a2ec1",
      "End": "2f6f9a1280dd4ad4870c27eef3a7cd39",
      "Id": "6544e9e38bc6416dbbf336a2aac165ff"
    },
    {
      "Start": "a73a7aeb53bb43cd80765a05162a2ec1",
      "End": "648be1e59ad149fc80ae0cca5d3dbfd3",
      "Id": "9ce16e0a91cc4694846902b8daf2582b"
    },
    {
      "Start": "debdf147fde145689ec9701090c3823b",
      "End": "25268136c89e446a8ee0e1f216709623",
      "Id": "6343a90823b640e3a3e66d8798973619"
    },
    {
      "Start": "debdf147fde145689ec9701090c3823b",
      "End": "f3691491020647daae2f76d0eaa11fec",
      "Id": "a8cbee53dc37489893d4d2b4ddc1b5f6"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.0.5885",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "List.Flatten",
        "Id": "1a67457042024fffa47144848a6355e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2615.3072351784986,
        "Y": 1619.1069578397583
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "792d9ed298b34b27bda4aa15f5459b7d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2799.9491900743869,
        "Y": 2251.9837691017074
      },
      {
        "ShowGeometry": true,
        "Name": "EXPORT FBX AND FAMILY PARAMETERS",
        "Id": "3ae3345a903249be97f680f137975494",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3006.8788417473938,
        "Y": 2289.5847964413933
      },
      {
        "ShowGeometry": true,
        "Name": "String from Object",
        "Id": "55277829ab4e43bb9c1d6a751edf8838",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2378.8231004017453,
        "Y": 1618.7844083327982
      },
      {
        "ShowGeometry": true,
        "Name": "Watch",
        "Id": "10af82f4d6c340d987358b3175dda7ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3364.7698905832967,
        "Y": 2288.8052144293233
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.FileName",
        "Id": "db7d270991b947e792bd55821affe611",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2354.7072566853876,
        "Y": 2325.9158182984629
      },
      {
        "ShowGeometry": true,
        "Name": "FileSystem.GetDirectoryContents",
        "Id": "e88591078fae476bb9e197faf6a54bcd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1845.26015165724,
        "Y": 1755.1239202382062
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9acd4a55e10f46d3b8b8c52f4fb32979",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2802.31625172303,
        "Y": 2418.6471819247104
      },
      {
        "ShowGeometry": true,
        "Name": "Directory.FromPath",
        "Id": "4b4fb88ad2ed492db2f891ad7e22ce32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1543.4066190565322,
        "Y": 1713.9642556518095
      },
      {
        "ShowGeometry": true,
        "Name": "Boolean",
        "Id": "0b44a7707318460d9ec9ebf7c1316187",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1543.2814734938386,
        "Y": 1888.7807808962734
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a9b0dac871754a60bda9a3a257946d0d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1544.8341821244139,
        "Y": 1799.8693967571976
      },
      {
        "ShowGeometry": true,
        "Name": "INPUT RFA FAMILIES",
        "Id": "ba6483d1f1054d5192602460d3851cab",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1122.4862343893933,
        "Y": 1558.1297127279413
      },
      {
        "ShowGeometry": true,
        "Name": "OUTPUT FBX FAMILIES",
        "Id": "e1dbbeb54eeb4d1687ff5437dfe4e0f6",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1109.96604441947,
        "Y": 2012.5939392332061
      },
      {
        "ShowGeometry": true,
        "Name": "OUTPUT JSON",
        "Id": "ec0fe5d011a84105ab9dd0cdac3a22ba",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1109.96604441947,
        "Y": 2196.9583470322555
      },
      {
        "ShowGeometry": true,
        "Name": "EXPORT FBX AND FAMILY PARAMETERS ADD PARAM",
        "Id": "7bbf36e89c3742fe8fbe0c1d4af0fc0b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 3014.5291395843592,
        "Y": 2781.1164324664123
      }
    ],
    "Annotations": [
      {
        "Id": "eca64b0586424d1b9168a22c16ac086c",
        "Title": "DESIGN",
        "Nodes": [
          "45ad7fb0cf3c40f1b503e636b24c848f",
          "eeee3c0c912a4b1392fec85536c817b2"
        ],
        "Left": 1791.5073924717499,
        "Top": 340.3009159619499,
        "Width": 311.75588189026695,
        "Height": 250.45529914592424,
        "FontSize": 36.0,
        "InitialTop": 393.3009159619499,
        "InitialHeight": 278.45529914592424,
        "TextblockHeight": 43.0,
        "Background": "#FFD8D8D8"
      },
      {
        "Id": "e421ea4010e24b53967fe28b7a09ea45",
        "Title": "<PROJECT NO.>\r\n<PROJECT NAME>",
        "Nodes": [
          "02c3db7667214881943b92c73b3d4a19"
        ],
        "Left": 1133.3843832891298,
        "Top": 350.3585263746462,
        "Width": 326.0,
        "Height": 400.0,
        "FontSize": 36.0,
        "InitialTop": 446.3585263746462,
        "InitialHeight": 140.0,
        "TextblockHeight": 86.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "5fd9a5d770754dd19cedc3ee6b395c2e",
        "Title": "DESIGNER'S GUIDELINES",
        "Nodes": [
          "c4c0b48ebe304622b12fe92ae5f4b204"
        ],
        "Left": 792.0,
        "Top": 349.58883311544218,
        "Width": 312.0,
        "Height": 400.0,
        "FontSize": 48.0,
        "InitialTop": 474.58883311544218,
        "InitialHeight": 140.0,
        "TextblockHeight": 115.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "7909ae278f6048e7a7b34f01f5dd80ec",
        "Title": "USER INTERFACE",
        "Nodes": [
          "5511df3c53e74627a542c9d03eae7699"
        ],
        "Left": 1070.1582441112296,
        "Top": 842.39843424406627,
        "Width": 391.0,
        "Height": 112.0,
        "FontSize": 48.0,
        "InitialTop": 910.39843424406627,
        "InitialHeight": 140.0,
        "TextblockHeight": 58.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "db5d6a43743641559d40eed17edb7e20",
        "Title": "DESIGN",
        "Nodes": [
          "729889092a624811aa4a16fee788141d"
        ],
        "Left": 1801.5332583761697,
        "Top": 835.2714946710571,
        "Width": 188.0,
        "Height": 112.0,
        "FontSize": 48.0,
        "InitialTop": 903.2714946710571,
        "InitialHeight": 140.0,
        "TextblockHeight": 58.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "ea94927bf654404bb1e5727d026b3505",
        "Title": "CONTROL",
        "Nodes": [
          "71a6ecc63f1b4751b9dfd86d2270be2c",
          "f0805f63d76443f9ad7ee5ff8d7ba437"
        ],
        "Left": 2060.9360536989398,
        "Top": 340.3009159619499,
        "Width": 343.62176366448011,
        "Height": 250.45529914592424,
        "FontSize": 36.0,
        "InitialTop": 393.3009159619499,
        "InitialHeight": 264.45529914592424,
        "TextblockHeight": 43.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "546e64d7d78d41b794584fb7e7d6ae18",
        "Title": "INPUT",
        "Nodes": [
          "4af9f1b0cf0f487cb95417ae3aec1a16",
          "bd516c3e6c6a4cabb3bc2439ed943a8e"
        ],
        "Left": 2340.3647149261396,
        "Top": 340.3009159619499,
        "Width": 294.0246286412164,
        "Height": 250.45529914592424,
        "FontSize": 36.0,
        "InitialTop": 393.3009159619499,
        "InitialHeight": 264.45529914592424,
        "TextblockHeight": 43.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "2eda785fa65941e5aa261802e3fedc64",
        "Title": "TO REVIT",
        "Nodes": [
          "de985ab57cd046fab849647e83125e3f",
          "2a8aead783de4977a053694c3f9f2a4e"
        ],
        "Left": 2610.79337615333,
        "Top": 340.3009159619499,
        "Width": 306.73960658893367,
        "Height": 250.45529914592424,
        "FontSize": 36.0,
        "InitialTop": 393.3009159619499,
        "InitialHeight": 264.45529914592424,
        "TextblockHeight": 43.0,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "ad54504725e34ac6afe70c53db5fa311",
        "Title": "MONITOR",
        "Nodes": [
          "e7977aa9cb0545a8ad796d3c7ae3064a",
          "04ff88e8b9ae4b6880b031df64e86e75"
        ],
        "Left": 2921.22203738052,
        "Top": 340.3009159619499,
        "Width": 306.85391576148038,
        "Height": 250.45529914592424,
        "FontSize": 36.0,
        "InitialTop": 393.3009159619499,
        "InitialHeight": 278.45529914592424,
        "TextblockHeight": 43.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "f997ca1b23f44e14a3e2d3241595f7e8",
        "Title": "ANNOTATION",
        "Nodes": [
          "1fdf975b03594e4f87d363d4a51da2d0",
          "17f1dd87845c43bcafae4a01178c3826"
        ],
        "Left": 3162.66421922576,
        "Top": 340.3009159619499,
        "Width": 232.15,
        "Height": 250.45529914592424,
        "FontSize": 36.0,
        "InitialTop": 393.3009159619499,
        "InitialHeight": 278.45529914592424,
        "TextblockHeight": 43.0,
        "Background": "#FF48B9FF"
      },
      {
        "Id": "df9d45bea0b04381ad3df7423ca1218a",
        "Title": "WIP",
        "Nodes": [
          "1945a5123998465c827de46ae57ef987",
          "0e01220bf9e54b3895cd67930bdfe3ae"
        ],
        "Left": 3410.72169013799,
        "Top": 340.0,
        "Width": 241.18148470761935,
        "Height": 250.45529914592419,
        "FontSize": 36.0,
        "InitialTop": 393.0,
        "InitialHeight": 278.45529914592419,
        "TextblockHeight": 43.0,
        "Background": "#FFFF7BAC"
      },
      {
        "Id": "070a964e50db4f278e9314f398234b56",
        "Title": "INPUT DIRECTORIES",
        "Nodes": [
          "ba6483d1f1054d5192602460d3851cab",
          "e1dbbeb54eeb4d1687ff5437dfe4e0f6",
          "ec0fe5d011a84105ab9dd0cdac3a22ba"
        ],
        "Left": 1099.96604441947,
        "Top": 1505.1297127279413,
        "Width": 327.52018996992319,
        "Height": 785.82863430431416,
        "FontSize": 36.0,
        "InitialTop": 1558.1297127279413,
        "InitialHeight": 783.82863430431416,
        "TextblockHeight": 43.0,
        "Background": "#FFD4B6DB"
      },
      {
        "Id": "d16ceab6f75744ba8bd6c2c89156b9af",
        "Title": "Extraction",
        "Nodes": [
          "3ae3345a903249be97f680f137975494",
          "7bbf36e89c3742fe8fbe0c1d4af0fc0b"
        ],
        "Left": 2996.8788417473938,
        "Top": 2236.5847964413933,
        "Width": 361.65029783696536,
        "Height": 715.531636025019,
        "FontSize": 36.0,
        "InitialTop": 2289.5847964413933,
        "InitialHeight": 692.531636025019,
        "TextblockHeight": 43.0,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "45ad7fb0cf3c40f1b503e636b24c848f",
        "Title": "DESIGN",
        "Nodes": [],
        "Left": 1803.5381772481496,
        "Top": 393.3009159619499,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "c4c0b48ebe304622b12fe92ae5f4b204",
        "Title": "DESIGNER'S GUIDELINES\r\n\r\n1. DIVIDE THE DYNAMO DEFINITION INTO THE USER INTERFACE AND THE BACK-END\r\n\r\n2. BUILD THE DEFINITION WITH SMALL BLOCKS\r\n\r\n3. BLOCKS SHOULD ALWAYS HAVE INPUT/OUTPUT \r\n\r\n4. RENAME INPUT/OUTPUT CONTAINERS TO DATA THEY CARRY\r\n\r\n5. COLOR-CODE BLOCKS ACCORDING TO THE TEMPLATE\r\n\r\n\r\n",
        "Nodes": [],
        "Left": 802.0,
        "Top": 474.58883311544218,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "eeee3c0c912a4b1392fec85536c817b2",
        "Title": "USE:\r\nFOR THE BACK-END FUNCTIONALITY       ",
        "Nodes": [],
        "Left": 1801.5073924717499,
        "Top": 531.75621510787414,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "02c3db7667214881943b92c73b3d4a19",
        "Title": "                                                                                       \r\nCREATED BY: <SUMMON IDEA>\r\nCREATED: <20210817>\r\n\r\nVERSION <0.1>\r\nLAST EDITED: <20210817>\r\n\r\nDYNAMO VERSION: <Dynamo 2.3>\r\n\r\nPACKAGES:\r\n<PACKAGES>\r\n\r\nNOTES:\r\n<NOTES>\r\n\r\n\r\nDYNAMO GRAPHIC STANDARD\r\nCREATED BY: VLADIMIR ONDEJCIK\r\nWHITE ARKITEKTER AB - 2016",
        "Nodes": [],
        "Left": 1143.3843832891298,
        "Top": 446.3585263746462,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "71a6ecc63f1b4751b9dfd86d2270be2c",
        "Title": "CONTROL",
        "Nodes": [],
        "Left": 2074.8342900344596,
        "Top": 393.3009159619499,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f0805f63d76443f9ad7ee5ff8d7ba437",
        "Title": "USE:\r\nFOR THE USER INPUT (SUCH AS SLIDERS,    \r\n NUMBERS, ....)",
        "Nodes": [],
        "Left": 2070.9360536989398,
        "Top": 517.75621510787414,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5511df3c53e74627a542c9d03eae7699",
        "Title": "INPUT + CONTROL                                                                            ",
        "Nodes": [],
        "Left": 1080.1582441112296,
        "Top": 910.39843424406627,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "729889092a624811aa4a16fee788141d",
        "Title": "BACK-END FUNCTIONALITY",
        "Nodes": [],
        "Left": 1811.5332583761697,
        "Top": 903.2714946710571,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "4af9f1b0cf0f487cb95417ae3aec1a16",
        "Title": "INPUT",
        "Nodes": [],
        "Left": 2354.60675295159,
        "Top": 393.3009159619499,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "bd516c3e6c6a4cabb3bc2439ed943a8e",
        "Title": "USE:\r\nFOR THE INCOMMING REFFERENCES\r\n(FILE PATHS, GEOMETRIES ...                     )",
        "Nodes": [],
        "Left": 2350.3647149261396,
        "Top": 517.75621510787414,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "de985ab57cd046fab849647e83125e3f",
        "Title": "TO REVIT",
        "Nodes": [],
        "Left": 2626.5971028977297,
        "Top": 393.3009159619499,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2a8aead783de4977a053694c3f9f2a4e",
        "Title": "USE:\r\nFOR BLOCKS THAT EXPORT THE GEOMETRY AND PARAMETERS TO REVIT",
        "Nodes": [],
        "Left": 2620.79337615333,
        "Top": 517.75621510787414,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e7977aa9cb0545a8ad796d3c7ae3064a",
        "Title": "MONITOR",
        "Nodes": [],
        "Left": 2933.2081216190395,
        "Top": 393.3009159619499,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "04ff88e8b9ae4b6880b031df64e86e75",
        "Title": "USE:\r\nFOR IMPORTANT WATCH NODES     ",
        "Nodes": [],
        "Left": 2931.22203738052,
        "Top": 531.75621510787414,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1fdf975b03594e4f87d363d4a51da2d0",
        "Title": "ANNOTATION",
        "Nodes": [],
        "Left": 3172.66421922576,
        "Top": 393.3009159619499,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "17f1dd87845c43bcafae4a01178c3826",
        "Title": "USE:\r\nFOR COMMENTS                              ",
        "Nodes": [],
        "Left": 3174.6506986077197,
        "Top": 531.75621510787414,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1945a5123998465c827de46ae57ef987",
        "Title": "WIP",
        "Nodes": [],
        "Left": 3420.72169013799,
        "Top": 393.0,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0e01220bf9e54b3895cd67930bdfe3ae",
        "Title": "USE:\r\nFOR \"WORK IN PROGRESS\"                 ",
        "Nodes": [],
        "Left": 3420.9031748456096,
        "Top": 531.45529914592419,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -47.935289720791161,
    "Y": 106.10748430386073,
    "Zoom": 0.20266723971033568
  }
}